summary(a)
b = subset(a > 0.20)
b = subset(a, a > 0.20)
b
sort(tapply(CPS$Education == "No high school diploma", CPS$MetroArea, mean, na.rm=TRUE))
summary(CPS)
tapply(CPS$Country != "United States", CPS$MetroArea, sum)
sort(tapply(CPS$Country != "United States", CPS$MetroArea, sum, na.rm=TRUE))
table(CPS$MetroArea)
nrow(table(CPS$MetroArea))
sort(table(CPS$MetroArea))
1668 / 5409
emails = read.csv("emails.csv", stringsAsFactors = FALSE)
str(emails)
summary(emails)
nrow(emails$spam == 1)
table(emails$spam)
emails$text[1]
emails$text[2]
which.max(nchar(emails$text))
nchar(emails$text[2651])
which.min(nchar(emails$text))
library(tm)
library(SnowBallC)
library(SnowballC)
corpus=Corpus(VectorSource(emails$text))
corpus = tm_map(corpus,tolower)
corpus = tm_map(corpus,removePunctuation)
corpus = tm_map(corpus, removeWords, stopwords("english"))
corpus = tm_map(corpus, stemDocument)
dtm = DocumentTermMatrix(corpus)
dtm
spdtm = removeSparseTerms(dtm,0.95)
spdtm
emailsSparse = as.data.frame(as.matrix(spdtm))
colSums(emailsSparse)
which.max(colSums(emailsSparse))
colnames(emailsSparse)= make.names(colnames(emailsSparse))
which.max(colSums(emailsSparse))
ls()
table(emails$spam)
emailsSparse$spam = emails$spam
colSums(emailsSparse)
sort(colSums(emailsSparse))
a= subset(colSums(emailsSparse), emailsSparse$spam == 0)
a
?colSums
sort(colSums(emailsSparse, emailsSparse$spam == 0))
emailsSparse
a = subset(emailSparse, emailsSparse$spam == 0)
a = subset(emailsSparse, emailsSparse$spam == 0)
summary(a)
colSums(a)
sort(colSums(a))
a = subset(emailsSparse, emailsSparse$spam == 1)
sort(colSums(a))
sort(colSums(subset(emailsSparse, spam == 1)))
sort(colSums(subset(emailsSparse, spam == 1)))
a = subset(emailsSparse, emailsSparse$spam == 0)
sort(colSums(a))
emailsSparse$spam = as.factor(emailsSparse$spam)
set.seed(123)
split = sample.split(emailsSparse$spam, SplitRatio=0.7)
library(caTools)
split = sample.split(emailsSparse$spam, SplitRatio=0.7)
train = subset(emailsSparse, split == TRUE)
test = subset(emailsSparse, split==FALSE)
spamLog = glm(spam ~ ., data=train, family="binomial")
spamCART = rpart(spam ~ ., data=train, method="class")
library(rpart)
library(rpart.plot)
spamCART = rpart(spam ~ ., data=train, method="class")
library(randomForest)
set.seed(123)
spamRF = randomForest(spam ~ ., data=train)
predictCART = predict(spamCART, data=train)
predictForest = predict (spamRF, data=train)
predictLR = predict(spamLog, data=train)
predictLR
summary(predictLR)
nrow(predictLR)
ncol(predictLR)
str(predictLR)
a = subset(predictLR, predictLR[1] < 0.00001)
nrow(a)
a
a = subset(predictLR, predictLR[,1] < 0.00001)
count(predictLR)
sum(predictLR)
nrow(predictLR)
nrow(predict < 1)
nrow(predictLR < 1)
rowSums(predictLR < 1)
sort(predictLR < 1)
table(predictLR < 1)
table(predictLR < 0.00001)
ls()
table(predictLR > 0.99999)
table(predictLR < 0.99999 & predict > 0.00001)
table(predictLR < 0.99999 && predict > 0.00001)
table(predictLR < 0.99999 & predictLR > 0.0000
)
table(predictLR < 0.99999 & predictLR > 0.00001)
table(predictLR > -5 & predictLR < 0.99999)
table(predictLR > 0.00001 & predictLR < 0.99999)
3056+954
spamRF = randomForest(spam ~ ., data=train,method="class")
predTrainLog = predict(spamLog, type="response")
predTrainCART = predict(spamCART)[,2]
predTrainRF = predict(spamRF, type="prob")[,2]
summary(predTrainLog)
str(predTrainLog)
summary(spamLog)
prp(spamCART)
table(train$spam, predictTrainLog)
table(train$spam, predTrainLog)
table(train$spam, predTrainLog > 0.5)
(3052+954)/(3052+954 + 4)
library(ROCR)
ROCRpred = prediction(predTrainLog, train$spam)
as.numeric(performance(ROCRpred,'auc')@y.values)
table(train$spam, predTrainCART > 0.5)
(894+2885) / (2885+ 894 + 167+64)
ROCRpred = prediction(predTrainCART, train$spam)
as.numeric(performance(ROCRpred,'auc')@y.values)
table(train$spam, predTrainRF > 0.5)
(917+3015) / (3015+917+41+37)
ROCRpred = prediction(predTrainRF, train$spam)
as.numeric(performance(ROCRpred,'auc')@y.values)
predTestLog = predict(spamLog, newdata=test, type="response")
predTestCART=predict(spamCART, newdata=test)[,2]
predTestRF = predict(spamRF, newdata=test, type="prob")[,2]
table(test$spam, predTestLog)
table(test$spam, predTestLog > 0.5)
(376+1257)/nrow(test)
ROCRpred = prediction(predTrainRF, train$spam)
ROCRpred = prediction(predTestLog, test$spam)
as.numeric(performance(ROCRpred,'auc')@y.values)
table(test$spam, predTestCART >= 0.5)
(1228+386)/nrow(test)
ROCRpred = prediction(predTestCART, test$spam)
as.numeric(performance(ROCRpred,'auc')@y.values)
table(test$spam, predTestRF >= 0.5)
(1292+388)/nrow(test)
ROCRpred = prediction(predTestRF, test$spam)
as.numeric(performance(ROCRpred,'auc')@y.values)
dtm
wordCount=rowSums(as.matrix(dtm))
hist(wordCount)
hist(log(wordCount))
str(wordCount)
str(emailsSparse)
summary(emailsSparse)
nrow(emailsSparse)
emailsSparse$logWordCount = log(wordCount)
boxplot(emailsSparese$logWordCount)
boxplot(emailsSparse$logWordCount)
boxplot(emailsSparse$logWordCount, emailsSparse$spam)
boxplot(emailsSparse$spam, emailsSparse$logWordCount)
boxplot(emailsSparse$spam ~ emailsSparse$logWordCount)
boxplot(emailsSparse$logWordCount ~ emailsSparse$spam)
train2 = subset(emailsSparse, split == TRUE)
test2 = subset(emailsSparse, split == FALSE)
spam2CART = rpart (spam ~  ., data=train2, method="class")
set.seed(123)
spam2RF = randomForest(spam ~ ., data=trains2, type="class")
spam2RF = randomForest(spam ~ ., data=train2, type="class")
prp(spam2CART)
pred2cart = predict(spam2CART)[,2]
pred2TestCART = predict(spam2CART, newdata=test2)[,2]
table(test2$spam, pred2TestCART >= 0.5)
(1214 + 384)/nrow(test)
ROCRpred = prediction(pred2TestCART, test$spam)
as.numeric(ROCRpred, 'auc')@y.values
as.numeric(performance(ROCRpred, 'auc')@y.values)
pred2TestForest = perdict(spam2RF, type="prob")[,2]
pred2TestForest = predict(spam2RF, type="prob")[,2]
table(test2$spam, pred2TestForest >= 0.5)
pred2TestForest = predict(spam2RF, newdata=test, type="prob")[,2]
pred2TestForest = predict(spam2RF, newdata=test2, type="prob")[,2]
table(test2$spam, pred2TestForest >= 0.5)
(1296 + 383)/nrow(test2)
ROCRpred = prediction(pred2TestForest, test$spam)
as.numeric(performance(ROCRpred, 'auc')@y.values)
install.packages("RTextTools")
library(RTextTools)
dtm2gram=create_matrix(as.character(corpus), ngramLength=2)
dtm2gram
spdtm2gram = removeSparseTerms(dtm2gram, 0.95)
spdtm2gram
emailsSparse2gram = as.data.frame(as.matrix(spdtm2gram))
colnames(emailsSparse2gram) = make.names(colnames(emailsSparse2gram))
emailsCombined = cbind(emailsSparse, emailsSparse2gram)
trainCombined = sample.split(emailsCombined, split == TRUE)
split
nrow(split)
table(split)
nrow(emailsSparse)
nrow(emailsCombined)
trainCombined = subset(emailsCombined, split == TRUE)
testCombined = subset(emailsCombined, split==FALSE)
spamCARTcombined = rpart(spam ~ ., data=trainCombined, method="class")
set.seed(123)
spamRFcombined = randomForest(spam ~ ., data=trainCombined)
spamCARTcombined
prp(spamCARTcombined)
prp(spamCARTcombined, varlen=0)
predCombined(spamCARTcombined, newdata=testCombined, type="class")
predCombined = predict(spamCARTcombined, newdata=testCombined, type="class")
table(testCombined$spam, predCombined)
(1233+374)/nrow(testCombined)
ROCRpred = prediction(testCombined, test$spam)
ROCRpred = prediction(testCombined, testCombined$spam)
ROCRpred = prediction(spamCARTcombined, testCombined$spam)
predCARTcombined = predict(spamCARTcombined, newdata=testCombined, type="class")
ROCRpred = prediction(predCARTcombined, testCombined$spam)
ROCRpred = prediction(predCARTcombined, testCombined$spam)
nrow(testCombined)
nrow(predCARTcombined)
predCARTcombined
predCARTcombined = predict(spamCARTcombined, newdata=testCombined, type="class")
predCARTcombined
str(testCombined)
summary(testCombined)
nrow(testCombined)
ROCRpred = prediction(spamCARTcombined, testCombined$spam)
spamCARTcombined
predictCARTcombined = predict(spamCARTcombined, newdata=testCombined, type="class")
ROCRpred = prediction(predictCARTcombined, testCombined$spam)
summary(predictCARTcombined)
summary(testCombined)
nrow(testCombined)
nrow(predictCARTcombined)
predictCARTcombined
nrow(testCombined)
predictCARTcombined = predict(spamCARTcombined, newdata=testCombined)
predictCARTcombined
predictCARTcombined = predict(spamCARTcombined, newdata=testCombined)
summary(testCombined)
nrow(testCombined)
spamCARTcombinedPred = predict(spamCARTcombined, newdata=testCombined)[,2]
spamCARTcombinedPrediction = prediction(spamCARTcombinedPred, testCombined$spam)
as.numeric(performance(spamCARTcombinedPrediction, "auc")@y.values)
predictRF = predict(spamRFcombined,type="prob")[,2]
predictRF = predict(spamRFcombined,newdata=testCombined,type="prob")[,2]
table(testCombined$spam, predictRF)
table(testCombined$spam, predictRF>= 0.5)
(1296 + 384)/nrow(testCombined)
ROCRpred = prediction(predictRF, testCombined$spam)
as.numeric(performance(ROCRpred,"auc")@y.values)
