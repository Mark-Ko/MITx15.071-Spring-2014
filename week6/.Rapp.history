sort(tapply(CPS$Country != "United States", CPS$MetroArea, sum, na.rm=TRUE))
table(CPS$MetroArea)
nrow(table(CPS$MetroArea))
sort(table(CPS$MetroArea))
1668 / 5409
dailykos = read.csv("dailykos.csv")
dailykos = read.csv("dailykos.csv")
ls()
k=7
set.seed(1000)
dMatrix = as.matrix(dailykos)
dVector = as.vector(dailykos)
set.seed(1000)
KMC=kmeans(dVector,centers=k)
dClusters=KMC$cluster
str(dClusters)
kCluster = split(dailykos,dClusters)
ls
ls()
kCluster
kCluster[[3]]
str(kCluster[[3]])
table(dCluster)
ls()
table(dClusters)
7 *490
str(kCluster[[1]])
str(kCluster[[2]])
str(kCluster[[3]])
str(kCluster[[4]])
str(kCluster[[5]])
str(kCluster[[6]])
str(kCluster[[7]])
str(dailykos)
rm(list=ls())
dailykos=read.csv("dailykos.csv")
str(dailykos)
dMatrix=as.matrix(dailykos[2:1546])
str(dMatrix)
dVector=as.vector(dailykos)
set.seed(1000)
k=7
set.seed(1000)
KMC=kmeans(dVector,centers=k)
dClusters = KMC$cluster
table(dClusters)
str(KMC)
KMC$centers
str(KMC)
ls
ls()
dClusters
table(dClusters)
kl1=subset(dailykos,dClusters==1)
str(kl1)
set.seed(1000)
rm(list=ls())
dailykos=read.csv("dailykos.csv")
KmeansCluster=kmeans(dailykos[2:1546],centers=7)
table(KmeansCluster$cluster)
KmeansCluster1=subset(dailykos,KmeansCluster$cluster==1)
KmeansCluster2=subset(dailykos,KmeansCluster$cluster==2)
KmeansCluster3=subset(dailykos,KmeansCluster$cluster==3)
KmeansCluster4=subset(dailykos,KmeansCluster$cluster==4)
KmeansCluster5=subset(dailykos,KmeansCluster$cluster==5)
KmeansCluster6=subset(dailykos,KmeansCluster$cluster==6)
KmeansCluster7=subset(dailykos,KmeansCluster$cluster==7)
str(KMeansCluster)
str(KmeansCluster)
tail(sort(colMeans(KmeansCluster1[-1])))
tail(sort(colMeans(KmeansCluster2[-1])))
tail(sort(colMeans(KmeansCluster3[-1])))
tail(sort(colMeans(KmeansCluster4[-1])))
tail(sort(colMeans(KmeansCluster5[-1])))
tail(sort(colMeans(KmeansCluster6[-1])))
tail(sort(colMeans(KmeansCluster7[-1])))
kosDist=dist(dailykos[2:1546],method="euclidean")
kosHierClust=hclust(kosDist,method="ward")
hierGroups=cutree(kosHierClust,k=7)
HierCluster1=subset(dailykos,hierGroups==1)
HierCluster2=subset(dailykos,hierGroups==2)
HierCluster3=subset(dailykos,hierGroups==3)
HierCluster4=subset(dailykos,hierGroups==4)
HierCluster5=subset(dailykos,hierGroups==5)
HierCluster6=subset(dailykos,hierGroups==6)
HierCluster7=subset(dailykos,hierGroups==7)
tail(sort(colMeans(HierCluster7[-1])))
table(hierGroups,KmeansCluster$cluster)
111+1+24+123+39+0+10
rm (list=ls())
ls ()
airlines = read.csv("AirlinesCluster.csv")
summary(airlines)
library(caret)
preproc = preProcess(airlines)
airlinesNorm=predict(preproc, airlines)
summary(airlinesNorm)
distance=dist(airlinesNorm, method="euclidean")
hClustAirlines = hclust(distance, method="ward")
plot(hClustAirlines)
hierClust = hclust(distance,method="ward")
hGroup = cutree(hierClust, k=5)
summary(hGroup)
str(hGroup)
table(hGroup)
clusterGroups = cutree(hierClust,k=5)
table(clusterGroups)
tapply(airlines$Balance, clusterGroups, mean)
summary(airlines)
tapply(airlines$QualMiles, clusterGroups, mean)
tapply(airlines$BonusMiles, clusterGroups, mean)
tapply(airlines$BonusTrans, clusterGroups, mean)
tapply(airlines$FlightMiles, clusterGroups, mean)
tapply(airlines$FlightTrans, clusterGroups, mean)
tapply(airlines$DaysSinceEnroll, clusterGroups, mean)
ls()
rm (hClusterAirlines)
rm (hClustAirlines)
rm(hGroup)
ls()
ls()
k=5
set.seed(88)
KMC=kmeans(airlinesNorm,centers=k,iter.max=1000)
str(KMC)
rm (KMC)
set.seed(88)
kmeansClust = kmeans(airlinesNorm,centers=5,iter.max=1000)
table(kmeansClust$cluster)
rm(list=ls())
claims=read.csv("reimbursement.csv")
str(claims)
summary(claims)
table(claims$alzheimers)
x = subset(claims, ihd == 1 | kidney == 1)
str(x)
x = subset(claims, alzheimers == 1 | arthritis == 1 | cancer == 1 | copd ==1 | depression == 1 | diabetes == 1 | heart.failure == 1 | ihd == 1 | kidney == 1 | osteoporosis == 1 | stroke == 1)
str(x)
str(claims)
280427 / 458005
summary(claims)
cor(claims)
max(cor(claims))
summary(claims)
plot(claims$reimbursement2009)
hist(claims$reimbursement2009)
claims$reimbursement2008 = log(claims$reimbursement2008+1)
claims$reimbursement2009 = log(claims$reimbursement2009+1)
log(0)
hist(claims$reimbursement2009)
table(claims$reimbursement2009)
summary(claims)
nrow(claims$reimbursement2009 == 0.0)
nrow(claims$reimbursement2009 < 1.0)
a = subset(claims, reimbursement2009 == 0.0)
str(a)
str(claims)
90498 / 458005
set.seed(144)
spl = sample(1:nrow(claims), size=0.7*nrow(claims))
train = claims[spl,]
test= claims[-spl,]
lm.claims = lm(reimbursement2009 ~ ., data=claims)
lm.claims = lm(reimbursement2009 ~ ., data=train)
summary(lm.claims)
predict = predict(lm.claims, newdata=test)
RMSE = sqrt(sum(lm.claims$residuals ^ 2) / nrow(test))
RMSE
RMSE = sqrt(sum((predict - test$reimbursement2009) ^ 2) / nrow(test))
RMSE
mean(train$reimbursement2009)
m = mean(train$reimbursement2009)
RMSE2 = sqrt(sum((m - test$reimbursement2009) ^ 2) / nrow(test))
RMSE2
RMSE3 = sqrt(sum((test$reimbursement2008 - test$reimbursement2009) ^ 2) / nrow(test))
RMSE3
train.limited = train
train.limited$reimbursement2009 = NULL
test.limited = test
test.limited$reimbursement2009 = NULL
library(caret)
preproc = preProcess(train.limited)
train.norm = predict(preproc, train.limited)
test.norm = predict(preproc, test.limited)
summary(train.norm)
summary(test.norm)
set.seed(144)
km = kmeans(train.norm,centers=3)
cl1 = subset(train.norm, km==1)
cl1 = subset(train.norm, km$cluster==1)
cl2 = subset(train.norm, km$cluster==2)
cl3 = subset(train.norm, km$cluster==3)
summary(cl1)
summary(cl2)
summary(cl3)
library(flexclust)
km.kcca=as.kcca(km,train.norm)
cluster.train=predict(km.kcca)
cluster.test = predict(km.kcca, newdata=test.norm)
summary(cluster.test)
table(cluster.test)
ls()
train1 = subset(train, cluster.test ==1)
train2 = subset(train, cluster.test == 2)
train3 = subset(train, cluster.test == 3)
train1 = subset(train, cluster.train ==1)
train2 = subset(train, cluster.train == 2)
train3 = subset(train, cluster.train ==3)
summary(train1)
summary(train2)
summary(train3)
test1 = subset(test, cluster.test ==1)
test2 = subset(test, cluster.test ==2)
test3 = subset(test, cluster.test ==3)
lm1 = lm(reimbursement2009 ~ ., data=train1)
lm2 = lm(reimbursement2009 ~ ., data=train2)
lm3 = lm(reimbursement2009 ~ ., data=train3)
summary(lm1)
summary(lm2)
summary(lm3)
pred.test1 = predict(lm1, newdata=test1)
pred.test2 = predict(lm2, newdata=test2)
pred.test3 = predict(lm3, newdata=test3)
summary(pred.test1)
summary(pred.test2)
summary(pred.test3)
RMSE1 = sqrt(sum((pred.test1 - test1$reimbursement2009)^2)/nrow(test1))
RMSE1
RMSE2 = sqrt(sum((pred.test2 - test2$reimbursement2009)^2)/nrow(test2))
RMSE2
RMSE3 = sqrt(sum((pred.test3 - test3$reimbursement2009)^2)/nrow(test3))
RMSE3
all.predictions = c(pred.test1, pred.test2, pred.test3)
all.outcomes = c(test1$reimbursement2009, test2$reimbursement2009, test3$reimbursement2009)
RMSEall = sqrt(sum(all.predictions - all.outcomes$reimbursement2009)^2)/nrow(all.outcomes))
RMSEall = sqrt(sum((all.predictions - all.outcomes$reimbursement2009)^2)/nrow(all.outcomes))
RMSEall = sqrt(sum((all.predictions - all.outcomes)^2)/nrow(all.outcomes))
RMSEall
all.predictions[1]
all.outcomes[1]
nrow(all.outcomes)
RMSEall = sqrt(sum((all.predictions - all.outcomes)^2))
RMSEall
summary(all.predictions)
nrow(all.predictions)
all.predictions
str(all.predictions)
str(all.outcomes)
RMSEall = sqrt(sum((all.predictions - all.outcomes)^2)/137402)
RMSEall
